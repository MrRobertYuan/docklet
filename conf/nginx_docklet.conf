server
{
         listen %NGINX_PORT;
         #ssl on;
         #ssl_certificate /etc/nginx/ssl/server.crt;
         #ssl_certificate_key /etc/nginx/ssl/server.key;
         #ssl_protocols  TLSv1.2 TLSv1.3;
         #ssl_prefer_server_ciphers on;
         #ssl_ciphers TLS13-AES-128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;

         server_name    nginx_docklet.conf;
         charset UTF-8;
         add_header X-Frame-Options SAMEORIGIN;
         merge_slashes off;
         rewrite (.*)//+(.*) $1/$2 permanent;
         index index.html index.htm;
         client_max_body_size 20m;
         if ($request_method ~* OPTIONS){
              return 403;
         }
         location ~ ^/NginxStatus/ {
              stub_status on;
              access_log off;
         }

         location ~ ^/(\d+\.\d+\.\d+\.\d+)/ {
               proxy_pass    http://$1:%PROXY_PORT;
               proxy_set_header Host $host;
               proxy_http_version 1.1;
               proxy_set_header Upgrade $http_upgrade;
               proxy_set_header Connection "Upgrade";
         }

         location / {
             client_max_body_size 20m;
             client_body_buffer_size 256k;
             proxy_connect_timeout 300;
             proxy_send_timeout 300;
             proxy_read_timeout 300;
             proxy_buffer_size 256k;
             proxy_buffers 4 256k;
             proxy_busy_buffers_size 256k;
             proxy_temp_file_write_size 256k;
             proxy_next_upstream error timeout invalid_header http_500 http_503 http_404;
             proxy_max_temp_file_size 128m;
             proxy_ignore_client_abort on;
             proxy_pass    http://%MASTER_IP:%WEB_PORT;
             proxy_http_version 1.1;
             proxy_set_header Upgrade $http_upgrade;
             proxy_set_header Connection "Upgrade";
            }
}
